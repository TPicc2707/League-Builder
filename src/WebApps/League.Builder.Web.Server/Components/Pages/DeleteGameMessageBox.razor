@inject IGameService GameService
@inject NavigationManager NavManager
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h5" Color="Color.Error" Style="font-weight: bold;">Delete</MudText>
    </TitleContent>
    <DialogContent>
        Are you sure that you want to delete this game?
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="Delete">Delete</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    [Parameter]
    public Guid Id { get; set; }

    private async Task Delete()
    {
        var game = await GameService.GetGameById(Id);
        var leagueId = game.Game.LeagueId.ToString();
        await GameService.DeleteGame(Id);
        MudDialog.Close(DialogResult.Ok(true));
        Snackbar.Add("Game has been deleted.", Severity.Success);
        StateHasChanged();
        NavManager.NavigateTo($"/leaguegames/{leagueId}");
    }

    private void Cancel() => MudDialog.Cancel();
}