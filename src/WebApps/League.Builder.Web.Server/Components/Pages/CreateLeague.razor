@page "/createleague"
@using Amazon
@inject ILeagueService LeagueService
@inject NavigationManager NavManager
@inject ISnackbar Snackbar
@inject NavigationManager NavManager;
@inject IHttpContextAccessor HttpContextAccessor

<AuthorizeView Roles="@Roles.CreateLeagues" Context="auth">
    <Authorized>
        <div style="padding-top: 150px; padding-bottom: 175px;">
            <MudText Typo="Typo.h3" Style="font-weight: bold; padding-bottom: 25px;" Align="Align.Center" Color="Color.Primary">Create League</MudText>
            <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <MudGrid>
                    <MudItem xs="12" sm="7">
                        <MudCard>
                            <MudCardContent>
                                <MudText Typo="Typo.body1" Style="font-weight: bold; padding-top: 5px; padding-bottom: 5px;">League Information:</MudText>
                                <MudTextField Label="League Name" HelperText="Max. 150 characters"
                                @bind-Value="model.Name" For="@(() => model.Name)" />
                                <MudTextField Label="Sport" Class="mt-3"
                                @bind-Value="model.Sport" For="@(() => model.Sport)" />
                                <MudTextField Label="Email Address" Class="mt-3"
                                @bind-Value="model.EmailAddress" For="@(() => model.EmailAddress)" />
                                <MudTextField Label="Description" Class="mt-3"
                                @bind-Value="model.Description" For="@(() => model.Description)" />
                                <MudItem Style="padding-top: 20px;">
                                    <MudStack Row="true">
                                        <MudFileUpload @ref="@_fileUpload"
                                        T="IBrowserFile"
                                        For="@(() => model.File)"
                                        @bind-Files="model.File">
                                            <ActivatorContent>
                                                <MudButton Variant="Variant.Filled"
                                                Color="Color.Primary"
                                                StartIcon="@Icons.Material.Filled.CloudUpload">
                                                    League Image
                                                </MudButton>
                                            </ActivatorContent>
                                        </MudFileUpload>
                                        @if (model.File != null)
                                        {
                                            <MudText Typo="@Typo.h6">@model.File.Name</MudText>
                                        }
                                    </MudStack>
                                </MudItem>
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" FullWidth="true">Create</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" sm="5">
                        <MudPaper Class="pa-4 mud-height-full">
                            <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
                            @if (success)
                            {
                                <MudText Color="Color.Success">Success</MudText>
                            }
                            else
                            {
                                <MudText Color="@Color.Error">
                                    <ValidationSummary />
                                </MudText>
                            }
                        </MudPaper>
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.body2" Align="Align.Center">
                            Fill out the form correctly to see the success message.
                        </MudText>
                    </MudItem>
                </MudGrid>
            </EditForm>

        </div>
    </Authorized>
    <NotAuthorized>
        <MudText>You are not authorized to view this page...</MudText>
    </NotAuthorized>
</AuthorizeView>

@code {

    protected override async Task OnInitializedAsync()
    {
        if (await AuthorizationStatus.IsUserAccessTokenExpired(HttpContextAccessor))
        {
            NavManager.NavigateTo("authentication/logout");
        }
    }

    // Add image selection when next version is worked
    CreateLeagueForm model = new CreateLeagueForm();
    bool success;
    private MudFileUpload<IBrowserFile> _fileUpload;

    public class CreateLeagueForm
    {
        [Required]
        [StringLength(150, ErrorMessage = "Name length can't be more than 150.")]
        public string Name { get; set; }

        [Required]
        public string Sport { get; set; }

        [Required]
        [EmailAddress]
        public string EmailAddress { get; set; }

        public string Description { get; set; }

        public string ImageFile { get; set; }

        [Required]
        public IBrowserFile File { get; set; }

    }

    private async Task OnValidSubmit(EditContext context)
    {
        model.ImageFile = model.File.Name;
        string rootpath = @"C:\Development\league-builder\src\WebApps\League.Builder.Web\wwwroot\images";
        FileStream filestream = new FileStream(rootpath, FileMode.Create, FileAccess.Write);
        await model.File.OpenReadStream().CopyToAsync(filestream);

        CreateLeagueRequest request = new CreateLeagueRequest(model.Name, model.Sport, model.Description, model.ImageFile, model.EmailAddress);
        await LeagueService.CreateLeague(request);
        success = true;
        Snackbar.Add("League has been created.", Severity.Success);
        NavManager.NavigateTo("/leagues");
        StateHasChanged();
    }

}
